/* TODO: autoprefixer */
/* Global */
:root {
  --font-base: "Fira Code", "Courier New", monospace;
  --gutter-width: 1rem;
  --gutter-height: 2rem;
  --checkbox-width: 1.8rem;
  --checkbox-gutter: 0.5rem;
  --console-max-width: 41rem;
  --console-border-thickness: 0.2rem;
  --nav-border-thickness: 0.1rem;
  --nav-gutter-width: 0.3rem;
  --nav-gutter-height: 0.2rem;
  --nav-gap: 1rem;
  --name-steps: 9;
  --name-width: 9ch;
  --type-time: 1.5s;
  --map-width: 60rem;
  --map-zoom-width: 120rem;
  --black: #000000;
  --red: #ff0000;
  --darkred: #870000;
  --blue: #0087ff;
  --darkblue: #00005f;
  --green: #00ff5f;
  --darkgreen: #005f00;
  --grey: #ffffff;
  --darkgrey: #121212;
  --yellow: #ffff00;
  --purple: #af87ff;
  --darkpurple: #5f005f;
  --pink: #ff87ff;
  --palepink: #ffd7ff;
  --darkpink: #d700ff;
  --teal: #00ffff;
  --ice: #afffff;
}

/* Reset */
* {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

/* General */
::-moz-selection {
  background: var(--darkblue);
}

::selection {
  background: var(--darkblue);
}

* {
  font-family: var(--font-base);
  scrollbar-color: var(--ice) var(--darkgrey);
}

body {
  background-color: var(--black);
  color: var(--ice);
  min-height: 100vh;
  padding: var(--gutter-height) var(--gutter-width);
}

@media only screen and (max-width: 400px) {
  body {
    padding: 0;
  }
}

a {
  color: var(--teal);
}

a:hover {
  background-color: var(--darkblue);
}

a:visited {
  color: var(--pink);
}

h1::before {
  content: "#\a0";
}

rt {
  font-size: 80%;
}

input[type="checkbox"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  color: inherit;
  width: var(--checkbox-width);
  padding-right: calc(var(--checkbox-width) + var(--checkbox-gutter));
}

input[type="checkbox"]::before {
  content: "[\a0]";
}

input[type="checkbox"]:checked::before {
  content: "[x]";
}

/* Console */
.console {
  max-width: var(--console-max-width);
  margin: 0 auto;
  border: var(--console-border-thickness) double var(--green);
}

/* Navigation */
header {
  width: 100%;
  border-bottom: var(--nav-border-thickness) solid var(--green);
  display: grid;
  -ms-grid-columns: -webkit-max-content auto;
  -ms-grid-columns: max-content auto;
  grid-template-columns: -webkit-max-content auto;
  grid-template-columns: max-content auto;
}

nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  gap: 0 var(--nav-gap);
}

nav a {
  padding: var(--nav-gutter-height) var(--nav-gutter-width);
  text-decoration: none;
}

nav a.active {
  background-color: var(--darkblue);
}

.name {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: var(--nav-gutter-height) var(--nav-gutter-width);
  background-color: var(--darkblue);
  color: var(--yellow);
  border-right: var(--nav-border-thickness) solid var(--green);
}

.name span::after {
  content: "\a0";
  display: inline-block;
  width: 1ch;
  background-color: var(--ice);
  animation:
    typing-cursor var(--type-time) steps(var(--name-steps)),
    blink 0.5s step-end var(--type-time) infinite alternate;
}

.name span {
  animation: typing var(--type-time) steps(var(--name-steps));
}

@keyframes typing {
  0% { clip-path: inset(0 var(--name-width) 0 0); }
  100% { clip-path: inset(0); }
}

@keyframes typing-cursor {
  0% { transform: translateX(calc(-1 * var(--name-width))); }
}

@keyframes blink {
  50% { background-color: transparent; }
}

/* Body */
main {
  padding: 0.5rem;
  counter-reset: line;
}

.interview dd {
  padding-left: 3rem;
}

/* Map */
.map {
  overflow-x: scroll;
}

.map svg {
  min-width: var(--map-width);
}

.map path {
  stroke: green;
  stroke-width: 0.1rem;
  fill: transparent;
}

.map path.active {
  fill: var(--teal);
}

#map-zoom:checked ~ .map svg {
  min-width: var(--map-zoom-width);
}

#map-zoom ~ label {
  cursor: pointer;
}

/* Syntax Highlighting */
pre.coq-syntax {
  overflow-x: auto;
}

code .kwd {
  color: var(--teal);
}

code .ident {
  color: var(--palepink);
}

code .tactic {
  color: var(--yellow);
}

code .oper {
  color: var(--purple);
}

code .number {
  color: var(--pink);
}
